---
- hosts: localhost
  tasks:
    - name: Install basic packages (neovim, ag)
      apt:
        name: "{{ packages }}"
        update_cache: yes
      become: yes
      vars:
        packages:
          - neovim
          - curl
          - fonts-hack-ttf
          - tmux
          - python3-dev


    - name: Install vim plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.local/share/nvim/site/autoload/plug.vim
      tags:
        - vim

    - name: Copy common .vimrc
      copy:
        src: files/.vimrc
        dest: ~/.vimrc
      tags:
        - vim

    - name: Copy common .gvimrc
      copy:
        src: files/.gvimrc
        dest: ~/.gvimrc
      tags:
        - vim

    - name: Create required directories
      file:
        path: "~/.vim/{{ paths }}"
        state: directory
      vars:
        paths:
          - backup/
          - undo/
      tags:
        - vim

    - name: Copy nvim config
      copy:
        src: files/init.vim
        dest: ~/.config/vim/
      tags:
        - vim

    - name: Install nvim plugins
      shell: nvim +'PlugInstall --sync' +'PlugUpdate' +qa --headless
      tags:
        - vim


    - name: Copy ssh_config
      copy:
        src: files/.ssh_config
        dest: ~/.ssh/config
      tags:
        - ssh


    - name: Copy gitconfig
      copy:
        src: files/.gitconfig
        dest: ~/.gitconfig

    - name: Copy global gitignore
      copy:
        src: files/.gitignore_global
        dest: ~/.gitignore_global


    - name: Install tmux package manager (TPM)
      git:
        repo: 'https://github.com/tmux-plugins/tpm'
        dest: ~/.tmux/plugins/tpm
      tags:
        - tmux

    - name: Install .tmux.conf
      copy:
        src: files/.tmux.conf
        dest: ~/.tmux.conf
      tags:
        - tmux

    - name: Install tmuxline
      copy:
        src: files/.tmuxline
        dest: ~/.tmuxline
      tags:
        - tmux


    - name: Install rust
      shell: curl https://sh.rustup.rs -sSf | sh -s -- -yyy
      args:
        creates: ~/.cargo/bin/cargo


    - name: Set up .bashrc
      blockinfile:
        path: ~/.bashrc
        block: |
          export BAT_THEME="OneHalfDark"

          alias gl="git lg"
          alias tmux="tmux -2"

          alias vim="nvim"
          export EDITOR="nvim"

          # Todo
          export TODOTXT_DEFAULT_ACTION=ls
          alias t="todo.sh"
          complete -F _todo t

          alias o="xdg-open"

          # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
          HISTSIZE=10000
          HISTFILESIZE=20000
      tags:
        - bash

    - name: Download pyenv installer
      get_url:
        url: https://pyenv.run
        dest: ~/.pyenv.run
        mode: 0755
      tags:
        - python
        - pyenv

    - name: Run pyenv installer
      shell: ~/.pyenv.run
      args:
        creates: ~/.pyenv
      tags:
        - python
        - pyenv

    - name: Remove pyenv installer
      file:
        path: ~/.pyenv.run
        state: absent
      tags:
        - python
        - pyenv

    - name: Download poetry installer
      get_url:
        url: https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py
        dest: ~/.get-poetry.py
        mode: 0755
      tags:
        - python
        - poetry

    - name: Run poetry installer
      shell: ~/.get-poetry.py
      args:
        creates: ~/.poetry
      tags:
        - python
        - poetry

    - name: Remove poetry installer
      file:
        path: ~/.get-poetry.py
        state: absent
      tags:
        - python
        - poetry

    - name: Register poetry bash completions
      shell: poetry completions bash
      register: poetry_completions
      tags:
        - python
        - poetry
        - bash

    - name: Install poetry bash completions
      become: true
      copy:
        content: "{{ poetry_completions }}"
        dest: /etc/bash_completion.d/poetry.bash-completion
      tags:
        - python
        - poetry
        - bash

    - name: Python in bashrc
      blockinfile:
        marker: "# {mark} ANSIBLE MANAGED BLOCK: PYTHON"
        path: ~/.bashrc
        block: |
          export PATH="/home/michael/.pyenv/bin:$PATH"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"
      tags:
        - python
        - pyenv
        - bash

    - name: nvm
      shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
      tags:
        - js


# Fix suspend
# https://askubuntu.com/questions/1115572/ubuntu-18-04-dell-xps15-9570-impossible-to-reliably-suspend-hibernate
# /etc/default/grub - GRUB_CMDLINE_LINUX="nouveau.blacklist=1 acpi_osi=! acpi_osi=\"Windows 2015\" acpi_backlight=vendor mem_sleep_default=deep"
# sudo update-grub
